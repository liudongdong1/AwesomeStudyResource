C51 COMPILER V9.52.0.0   MOTOER_PID                                                        08/26/2014 09:03:52 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MOTOER_PID
OBJECT MODULE PLACED IN MOTOER_PID.OBJ
COMPILER INVOKED BY: D:\Program Files\keil\C51\BIN\C51.EXE MOTOER_PID.C BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg52.h>
   2          #include"lcd1602.h"
   3          
   4          sfr T2MOD = 0x0c9;
   5          #define uchar unsigned char
   6          #define uint unsigned int
   7          
   8          sbit Q0 = P2^4;
   9          sbit Q1 = P2^5;
  10          sbit Q2 = P2^6;
  11          sbit Q3 = P2^7;
  12          
  13          sbit PWM                = P1^7;
  14          sbit UP                 = P1^0;
  15          sbit DOWM               = P1^1;
  16          sbit GORB               = P2^3; //»»Ïà
  17          sbit ADDSPEED   = P1^2;
  18          sbit SUBSPEED   = P1^3;
  19          
  20          uint tuint = 65535;
  21          uint tpwm = 1;  //pwmÖÜÆÚÎª10000us tpwm±äÁ¿±íÊ¾pwm¸ßµçÆ½Ê±¼ä£¬Ò²Ïàµ±ÓÚÕ¼¿Õ±È (·ÂÕæÊ±£¬ÆµÂÊ¸ßÊ±£¬µç»ú·´Ó¦Âý¡
             -£ÔÚÊµÎïÉÏÒª¼Ó´óÆµÂÊ)
  22          uchar t1_flag = 0;
  23          
  24          uint pulse = 0;
  25          uint t0_flag = 0;
  26          uchar t2_flag = 0;
  27          bit t2_over = 0;
  28          bit Just_Get = 1;
  29          
  30          
  31          #define         ZZ              { Q0 = 0;Q1 = 0;Q2 = 1;Q3 = 1;} //Õý×ª
  32          #define         FZ              { Q0 = 1;Q1 = 1;Q2 = 0;Q3 = 0;} //·´×ª
  33          #define         STOP    { Q0 = 1;Q1 = 0;Q2 = 1;Q3 = 0;} //Í£Ö¹
  34          //½ûÖ¹³öÏÖ Q0 = 0;Q1 = 1;Q2 = 0;Q3 = 1; ²»È»»áÉÕµômos¹Ü
  35          
  36          //************************ PID *************************************
  37          float now = 0,bef = 0,bbef = 0;         //±¾´Î²ÉÑùÖµ£¬ÉÏ´Î²ÉÑùÖµ£¬ÉÏÉÏ´Î²ÉÑùÖµ
  38          float err_now,err_bef,err_bbef;         //µ±Ç°Æ«²î£¬ÉÏ´ÎÆ«²î£¬ÉÏÉÏ´ÎÆ«²î
  39          float error_add = 0;                            //ËùÓÐÆ«²îÖ®ºÍ
  40          float set = 25;                                         //Éè¶¨Öµ
  41          
  42          float kp = 25;
  43          float ki = 25;
  44          float kd = 0;
  45          
  46          //*****************************************************************
  47          
  48          void delayms(uint ms)//ÑÓÊ±£¿¸ö ms
  49          {
  50   1          uchar a,b,c;
  51   1              while(ms--)
  52   1              { 
  53   2                for(c=1;c>0;c--)
  54   2              for(b=142;b>0;b--)
C51 COMPILER V9.52.0.0   MOTOER_PID                                                        08/26/2014 09:03:52 PAGE 2   

  55   2                  for(a=2;a>0;a--);
  56   2              }
  57   1      }
  58          
  59          void timer_init()
  60          {
  61   1              EA = 1;
  62   1              ET0 = 1;
  63   1              ET1 = 1;
  64   1              ET2 = 1;
  65   1              
  66   1              TMOD = 0x15; //¶¨Ê±Æ÷0 ¼ÆÊýÄ£Ê½ ¶¨Ê±Æ÷1Ä£Ê½1
  67   1              T2MOD = 0x01;
  68   1              
  69   1              TH0 = TL0 = 255;
  70   1              TH2 = 0x3C;
  71   1              TL2 = 0xB0;             //50MS
  72   1              
  73   1      }
  74          void timer1() interrupt 3
  75          {
  76   1              if(t1_flag == 0)
  77   1              {
  78   2                      t1_flag = 1;
  79   2                      PWM = 1;
  80   2                      TH1 = (tuint - tpwm + 1)/256;
  81   2                      TL1 = (tuint - tpwm + 1)%256;
  82   2                      
  83   2              }
  84   1              else
  85   1              {
  86   2                      t1_flag = 0;
  87   2                      PWM = 0;
  88   2                      TH1 = (tuint - 10000 + tpwm + 1)/256;
  89   2                      TL1 = (tuint - 10000 + tpwm + 1)%256;
  90   2              }
  91   1      }
  92          
  93          void timer0() interrupt 1
  94          {
  95   1              TH0 = TL0 = 255;
  96   1              t0_flag++;
  97   1      }
  98          void timer2() interrupt 5
  99          {
 100   1              TF2 = 0;
 101   1              TH2 = 0x3C;
 102   1              TL2 = 0xB0;             //50MS
 103   1              
 104   1              t2_flag++;
 105   1              
 106   1              if(t2_flag == 2)
 107   1              {
 108   2                      TR0 = 0;
 109   2                      TR2 = 0;
 110   2                      t2_flag = 0;
 111   2                      t2_over = 1;    //±íÊ¾100msÊ±¼äµ½
 112   2              }
 113   1      }
 114          void GetPulse()
 115          {
 116   1              t0_flag = 0;
C51 COMPILER V9.52.0.0   MOTOER_PID                                                        08/26/2014 09:03:52 PAGE 3   

 117   1              t2_flag = 0;
 118   1              
 119   1              TH0 = TL0 = 255;
 120   1              TH2 = 0x3C;
 121   1              TL2 = 0xB0;             //50MS
 122   1              
 123   1              TR0 = 1;
 124   1              TR2 = 1;
 125   1      }
 126          
 127          int PID()       //ÔöÁ¿Ê½PID
 128          {
 129   1              int change;
 130   1      
 131   1              err_now = set - now;
 132   1              err_bef = set - bef;
 133   1              err_bbef = set - bbef;
 134   1              
 135   1              change = kp*(err_now - err_bef) + ki*err_now + kd*(err_now - 2*err_bef + err_bbef);
 136   1              
 137   1      /*      
 138   1              if(set >= now)
 139   1              {       
 140   1                      if(set - now > 1)
 141   1                              change = kp*(err_now - err_bef) + ki*err_now + kd*(err_now - 2*err_bef + err_bbef);
 142   1                      else
 143   1                              change = 0.2*kp*(err_now - err_bef) + 0.5*ki*err_now + kd*(err_now - 2*err_bef + err_bbef);
 144   1              }
 145   1              else if(now > set)
 146   1              {
 147   1                      if(now - set > 1)
 148   1                              change = kp*(err_now - err_bef) + ki*err_now + kd*(err_now - 2*err_bef + err_bbef);
 149   1                      else
 150   1                              change = 0.2*kp*(err_now - err_bef) + 0.5*ki*err_now + kd*(err_now - 2*err_bef + err_bbef);
 151   1                              
 152   1              }
 153   1      */
 154   1              
 155   1              //change = (kp + ki + kd)*(set - now) + (-kp - 2*kd)*(set - bef) + kd*(set - bbef);
 156   1              //change = kp*(set - now) + ki*(set - bef) + kd*(set - bbef);
 157   1              if(change > 0)
 158   1              {
 159   2                      printchar(1,10,'+');    
 160   2                      printuint(1,11,4,change);
 161   2                      
 162   2              }
 163   1              else if(change < 0)
 164   1              {       
 165   2                      printchar(1,10,'-');
 166   2                      printuint(1,11,4,-change);
 167   2              }
 168   1              else if(change == 0)
 169   1              {       
 170   2                      printchar(1,10,' ');
 171   2                      printword(1,11," 0  ");
 172   2      
 173   2              }
 174   1              
 175   1              return(change);
 176   1      }
 177          
 178          int PID2()              //Î»ÖÃÊ½PID
C51 COMPILER V9.52.0.0   MOTOER_PID                                                        08/26/2014 09:03:52 PAGE 4   

 179          {
 180   1              
 181   1              int num = 0;
 182   1              static num_bef = 0;
 183   1              
 184   1              err_now = set - now;
 185   1              err_bef = set - bef;
 186   1              
 187   1              error_add = error_add + err_now;  //Îó²îÀÛ¼Ó¡£Ò»µ©Îó²îÎª0Ôòerror_addµÄÖµ²»±ä£¬PIDÊä³öÖµ²»±ä
 188   1      
 189   1              num = kp*err_now + ki*error_add + kd*(err_now - err_bef);
 190   1              
 191   1      /*      
 192   1              if(set - now >= 0)
 193   1              {       
 194   1                      if(set - now > 1)
 195   1                              num = kp*err_now + ki*error_add + kd*(err_now - err_bef);
 196   1                      else
 197   1                              num = 0.1*kp*err_now + ki*error_add + kd*(err_now - err_bef);
 198   1              }
 199   1              else
 200   1              {
 201   1                      if(now - set > 1)
 202   1                              num = kp*err_now + ki*error_add + kd*(err_now - err_bef);
 203   1                      else
 204   1                              num = 0.1*kp*err_now + ki*error_add + kd*(err_now - err_bef);
 205   1                              
 206   1              }
 207   1              */
 208   1              
 209   1              if(num > num_bef)
 210   1              {
 211   2                      printchar(1,10,'+');    
 212   2                      printuint(1,11,4,num - num_bef);
 213   2              }
 214   1              else if(num < num_bef)
 215   1              {
 216   2                      printchar(1,10,'-');    
 217   2                      printuint(1,11,4,num_bef - num);
 218   2              }
 219   1              else
 220   1              {       
 221   2                      printchar(1,10,' ');
 222   2                      printuint(1,11,4,0);
 223   2              }
 224   1              
 225   1              num_bef = num;
 226   1              
 227   1              return((uint)num);
 228   1      }
 229          
 230          void main()
 231          {       
 232   1              
 233   1              lcd_init();
 234   1              timer_init();
 235   1              TH1 = TL1 = 255;
 236   1              
 237   1              printword(0,0,"P:");            //±ÈÀýÏµÊý
 238   1              printword(0,5,"S:");            //Éè¶¨Öµ 
 239   1              printword(1,0,"TPWM:");         //µ±Ç°Õ¼¿Õ±È
 240   1              printword(0,10,"PS:");          //µ±Ç°µç»ú·´À¡µÄÃ¿ÃëÂö³åÊý
C51 COMPILER V9.52.0.0   MOTOER_PID                                                        08/26/2014 09:03:52 PAGE 5   

 241   1              
 242   1              while(1)
 243   1              {
 244   2                      if(GORB == 1)
 245   2                      {       ZZ;             }
 246   2                      else
 247   2                      {       FZ;             }
 248   2                      
 249   2                      if(ADDSPEED == 0)
 250   2                              set++;
 251   2                      if(SUBSPEED == 0)
 252   2                              set--;
 253   2                      
 254   2                      if(Just_Get == 1)
 255   2                      {       
 256   3                              Just_Get = 0;
 257   3                              GetPulse();
 258   3                      }
 259   2                      else if(t2_over == 1)
 260   2                      {       
 261   3                              t2_over = 0;
 262   3                              Just_Get = 1;
 263   3                              pulse = t0_flag;
 264   3                              bbef = bef;
 265   3                              bef = now;
 266   3                              now = t0_flag;
 267   3                              
 268   3                              if(set != 0)
 269   3                              {
 270   4                                      TR1 = 1;
 271   4                              }
 272   3                              else
 273   3                              {
 274   4                                      TR1 = 0;
 275   4                                      PWM = 0;
 276   4                              }
 277   3                              
 278   3                      //      tpwm = tpwm + PID();            //ÔöÁ¿Ê½PID
 279   3                              tpwm = PID2();                          //Î»ÖÃÊ½PID
 280   3                                              
 281   3                      }
 282   2                      
 283   2                      if(UP == 0)
 284   2                              kp = kp + 1;
 285   2                      if(DOWM == 0)
 286   2                              kp = kp - 1;
 287   2                      
 288   2                      printuint(0,2,3,kp);
 289   2                      printuint(0,7,3,set);
 290   2                      printuint(1,5,4,tpwm);
 291   2                      printuint(0,13,5,pulse);
 292   2      
 293   2              }
 294   1              
 295   1      }
 296                  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2038    ----
   CONSTANT SIZE    =     26    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.52.0.0   MOTOER_PID                                                        08/26/2014 09:03:52 PAGE 6   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =     56      35
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
